=pod

=head1 NAME

FLTK::Style - The base class for all FLTK Widgets' Style

=head1 Description

Each L<widget|FLTK::Widget> has a pointer to an instance of Style.
Usually many widgets share pointers to the same one. Styles are linked
into a hierarchy tree by the parent_ pointers.
When you look up a value from a style (such as when L<C<box( )>|/box()>
is called) it looks at that style and each parent up until it finds a
non-zero value to return, or until there are no more parents, in which
case zero is returned. Thus changing a parent style can make global
changes as long as widgets do not have local values set.

When you "set" a style (such as by calling C<box(UP_BOX)>) then the local
member variable is set. Notice that by setting a zero value you will
indicate that it should return the parent value.

The method L<C<FLTK::Widget::box(BOX)>|FLTK::Widget/"box()"> will create
a L<C<dynamic( )>|/dynamic()> style for that widget, which is a child of
the original style, and set the box in that style. This "unique" style
is reused for any other changes to that widget and it is deleted when the
widget is deleted. Thus changes to a single widget do not affect other
widgets, but the majority of widgets all share a Style structure.

=head1 Constructor

This class supports only one basic constructor.

=over

=item C<new ( )>

The constructor clears the style to entirely zeros, including the
C<parent> pointer. You probably want to set the parent to
L<C<FLTK::Widget::default_style>|FLTK::Widget/default_style> in order to
inherit the global settings.

=back

=head1 Methods

=over


=item C<box( )>

The type of box to draw around the outer edge of the widget (for the
majority of widgets, some classes ignore this or use it to draw only text
fields inside the widget). The default is C<fltk::DOWN_BOX>.

=item C<buttonbox( )>

The type of box to draw buttons internal the widget (notice that
L<C<FLTK::Button>|FLTK::Button> uses box, however). The default is
C<fltk::UP_BOX>.

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=item C<>

=back

=head1 Disclaimer

This document and the specification behind it are subject to change.
All modifications will be documented in the Changes file included with
this distribution.  All versions of this file can be found in the
project's git repository.

=head1 Author

Sanko Robinson <sanko@cpan.org> - http://sankorobinson.com/

CPAN ID: SANKO

=head1 License and Legal

Copyright (C) 2009 by Sanko Robinson E<lt>sanko@cpan.orgE<gt>

This program is free software; you can redistribute it and/or modify
it under the terms of The Artistic License 2.0.  See the F<LICENSE>
file included with this distribution or
http://www.perlfoundation.org/artistic_license_2_0.  For
clarification, see http://www.perlfoundation.org/artistic_2_0_notes.

When separated from the distribution, all POD documentation is covered
by the Creative Commons Attribution-Share Alike 3.0 License.  See
http://creativecommons.org/licenses/by-sa/3.0/us/legalcode.  For
clarification, see http://creativecommons.org/licenses/by-sa/3.0/us/.

=for git $Id: Style.pod a404412 2009-03-24 05:36:10Z sanko@cpan.org $ forgot=

=cut
