=pod

=head1 NAME

FLTK::Button - The base class for all FLTK Buttons

=head1 Description

Buttons generate callbacks when they are clicked by the user. You control
exactly when and how by changing the values for when():

=over

=item C<FLTK::WHEN_NEVER>

The callback is not done, instead changed() is turned on.

=item C<FLTK::WHEN_RELEASE>

This is the default, the callback is done after the user successfully
clicks the button (i.e. they let it go with the mouse still pointing at
it), or when a shortcut is typed.

=item C<FLTK::WHEN_CHANGED>

The callback is done each time the value() changes (when the user pushes
and releases the button, and as the mouse is dragged around in and out of
the button).

Buttons can also generate callbacks in response to fltk::SHORTCUT events.
The button can either have an explicit shortcut() value or a letter
shortcut can be indicated in the label() with an '&' character before it.
For the label shortcut it does not matter if Alt is held down, but if you
have an input field in the same window, the user will have to hold down
the Alt key so that the input field does not eat the event first as an
fltk::KEY event.

=head1 Constructor

This class supports only one basic constructor.

=over

=item C<new ( x, y, w, h, [label = ''] )>

The default constructor takes a value for x(), y(), w(), and h(), and an
optional value for label(). All subclasses must provide an identical
constructor in order to work with Fluid. They may also provide
alternative constructors.

If L<C<FLTK::Group::begin( )>|FLTK::Group/"begin ( )"> has been called,
this widget is added as a new child of that group, and parent() is set to
the group. If L<C<FLTK::Group::begin( )>|FLTK::Group/"begin ( )"> has not
been called, or L<C<FLTK::Group::end( )>|FLTK::Group/"end ( )"> has been
called, or L<C<FLTK::Group::current( 0 )>|FLTK::Group/"current ( )">,
then the parent() is set to C<undef>. In this case you must add the
widget yourself in order to see it.

=back

=head1 Methods

C<FLTK::Button> is a subclass of L<C<FLTK::Widget>|FLTK::Widget>
and, in addition to the following methods, inherits those supported by
L<C<FLTK::Widget>|FLTK::Widget>.

=over

=item C<value ( [VALUE] )>

The current value. True means it is pushed down, false means it is not
pushed down. The L<ToggleButton|FLTK::Togglebutton> subclass provides the
ability for the user to change this value permanently, otherwise it is
just temporary while the user is holding the button down.

This is the same as L<C<FLTK::Widget::state( )>|FLTK::Widget/state ( )>.

=item C<draw ( glyph_width )>

This function provides a mess of back-compatibility and Windows emulation
to subclasses of L<Button|FLTK::Button> to draw with. It will draw the
button according to the current state of being pushed and it's
L<C<state( )>|FLTK::Widget/state( )>. If non-zero is passed for
C<glyph_width> then the glyph( ) is drawn in that space on the left (or
on the right if negative), and it assumes the glyph indicates the
L<C<state( )>|FLTK::Widget/state( )>, so the box is only used to indicate
the pushed state.


=back

=head1 Disclaimer

This document and the specification behind it are subject to change.
All modifications will be documented in the Changes file included with
this distribution.  All versions of this file can be found in the
project's git repository.

=head1 Author

Sanko Robinson <sanko@cpan.org> - http://sankorobinson.com/

CPAN ID: SANKO

=head1 License and Legal

Copyright (C) 2009 by Sanko Robinson E<lt>sanko@cpan.orgE<gt>

This program is free software; you can redistribute it and/or modify
it under the terms of The Artistic License 2.0.  See the F<LICENSE>
file included with this distribution or
http://www.perlfoundation.org/artistic_license_2_0.  For
clarification, see http://www.perlfoundation.org/artistic_2_0_notes.

When separated from the distribution, all POD documentation is covered
by the Creative Commons Attribution-Share Alike 3.0 License.  See
http://creativecommons.org/licenses/by-sa/3.0/us/legalcode.  For
clarification, see http://creativecommons.org/licenses/by-sa/3.0/us/.

=for git $Id: Button.pod 43c1956 2009-03-24 16:25:46Z sanko@cpan.org $ forgot=

=cut
