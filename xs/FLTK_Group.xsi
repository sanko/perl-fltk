#include <fltk/Group.H>

MODULE = FLTK               PACKAGE = FLTK::Group

Group *
Group::new( X, Y, W, H, LABEL = "", BEGIN = false )
    int X
    int Y
    int W
    int H
    char * LABEL
    bool BEGIN
    CODE:
        RETVAL = new Group(X, Y, W, H, LABEL, BEGIN);
        ST(0) = sv_newmortal();
        warn ("CLASS == %s", CLASS);
        sv_setref_pv( ST(0), CLASS, (void*) RETVAL );
        //sv_setref_pv( ST(0), "FLTK::Group", (void*) RETVAL );

#bool
#Group::DESTROY( )
#     CODE:
#        warn ( "Bye, Group (%s)!", THIS->label());
#        delete THIS;

void
Group::add( WIDGET )
    Widget * WIDGET

void
Group::begin( )

Widget *
Group::child( INDEX )
    int INDEX

int
Group::children( )

void
Group::draw()

void
Group::end( )

int
Group::find(const Widget * widget)


void
Group::fix_old_positions()


int
Group::focus_index(...)
    CASE: items == 1
        CODE:
            RETVAL = THIS->focus_index( );
        OUTPUT:
            RETVAL
    CASE: items == 2
        int    v   = (int)SvIV(ST(1));
        CODE:
            THIS->focus_index( v );
            RETVAL = THIS->focus_index( ) == v ? THIS->focus_index( ) : NULL;
        OUTPUT:
            RETVAL
    CASE:
        CODE:
            croak("You're doing it wrong."); // ...yeah, this is bad

int
Group::handle(int handle)
    CODE:
        RETVAL = THIS->handle( handle );
    OUTPUT:
        RETVAL

void
Group::init_sizes()

void
Group::layout()

void
Group::remove(...)
    CODE:
        warn ("TODO: Widget->remove( ... )");

void
Group::remove_all( )

void
Group::replace(...)
    CODE:
        warn ("TODO: Widget->replace( ... )");

void
Group::clear( )

Widget *
Group::resizable( WIDGET = NO_INIT )
    CASE: items == 1
        CODE:
            RETVAL = THIS->resizable( );
        OUTPUT:
            RETVAL
    CASE: items == 2
        Widget * WIDGET
        CODE:
            THIS->resizable( WIDGET );

Flags
Group::resize_align()
    CODE:
        RETVAL = THIS->resize_align( );
    OUTPUT:
        RETVAL

void
Group::set_focus(Widget * w)

void
Group::swap(int indexA, int indexB)

 # Children

INCLUDE: FLTK_Window.xsi

 #
 # Copyright (C) 2009 by Sanko Robinson <sanko@cpan.org>
 #
 # This program is free software; you can redistribute it and/or modify it
 # under the terms of The Artistic License 2.0.  See the LICENSE file
 # included with this distribution or
 # http://www.perlfoundation.org/artistic_license_2_0.  For
 # clarification, see http://www.perlfoundation.org/artistic_2_0_notes.
 #
 # When separated from the distribution, all POD documentation is covered by
 # the Creative Commons Attribution-Share Alike 3.0 License.  See
 # http://creativecommons.org/licenses/by-sa/3.0/us/legalcode.  For
 # clarification, see http://creativecommons.org/licenses/by-sa/3.0/us/.
 #
 # $Id$
 #
