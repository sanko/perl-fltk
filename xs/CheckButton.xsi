#ifndef DISABLE_CHECKBUTTON

MODULE = FLTK               PACKAGE = FLTK::CheckButton

=pod

=for license Artistic License 2.0 | Copyright (C) 2009 by Sanko Robinson

=for author Sanko Robinson <sanko@cpan.org> - http://sankorobinson.com/

=for abstract Push button widget

=for git $Id$

=head1 Description

This button turns the L<C<value()>|FLTK::Button/"value"> on and off each
release of a click inside of it, and displays a checkmark to the user.

You can control the color of the checkbox with
L<C<color()>|FLTK::Widget/"color"> and the color of the checkmark with
L<C<textcolor()>|FLTK::Widget/"textcolor">. You can make it draw different
colors when turned on by setting
L<C<selection_color()>|FLTK::Widget/"selection_color"> and
L<C<selection_textcolor()>|FLTK::Widget/"selection_textcolor"> on the widget
(these are ignored if set in an inherited L<C<style()>|/"style">).

=cut

#include <fltk/CheckButton.h>

=for apidoc ||FLTK::CheckButton|new|x|y|w|h|label = ""

Creates a new C<FLTK::CheckButton> object. Obviously.

=cut

CheckButton *
CheckButton::new(int x, int y, int w, int h, char * label = 0)

#ifdef ENABLE_DESTROY

bool
CheckButton::DESTROY ( )
    CODE:
#if VERBOSE >= 2
        warn ( "Bye, CheckButton (label: '%s')", THIS->label());
#endif // #if VERBOSE >= 2
        delete THIS;
        RETVAL = true;
    OUTPUT:
        RETVAL

#endif // #ifdef ENABLE_DESTROY

=for apidoc ||FLTK::NamedStyle|default_style|

NFI

=cut

NamedStyle *
CheckButton::default_style ( )
    CODE:
        RETVAL = THIS->default_style;
    OUTPUT:
        RETVAL

BOOT:
    isa("FLTK::CheckButton", "FLTK::Button");

#endif // ifndef DISABLE_CHECKBUTTON
