#ifndef DISABLE_BARGROUP

MODULE = FLTK               PACKAGE = FLTK::BarGroup

=pod

=for license Artistic License 2.0 | Copyright (C) 2009 by Sanko Robinson

=for author Sanko Robinson <sanko@cpan.org> - http://sankorobinson.com/

=for version 0.530

=for git $Id$

=head1 NAME

FLTK::BarGroup - A closable strip typically used as a container for toolbars

=head1 Description

The L<BarGroup|FLTK::BarGroup> is a closable strip that can be put in the
edges of a L<Pack|FLTK::Pack>, usually it contains toolbars or buttons.

Based on Frametab V2 contributed by Curtis Edwards (curt1@trilec.com)

=begin apidoc

=cut

#include <fltk/BarGroup.h>

=for apidoc ||FLTK::BarGroup|new|x|y|width|height|label = ""|begin = 0

Creates a new C<FLTK::BarGroup> object.

=cut

#include "include/WidgetSubclass.h"

void
fltk::BarGroup::new ( int x, int y, int w, int h, char * label = 0, bool begin = false )
    PPCODE:
        void * RETVAL = NULL;
        RETVAL = (void *) new WidgetSubclass<fltk::BarGroup>(CLASS,x,y,w,h,label,begin);
        if (RETVAL != NULL) {
            ST(0) = sv_newmortal();
            sv_setref_pv(ST(0), CLASS, RETVAL); /* -- hand rolled -- */
            XSRETURN(1);
        }

=for apidoc ||FLTK::NamedStyle|default_style|



=cut

fltk::NamedStyle *
fltk::BarGroup::default_style( )
    CODE:
        RETVAL = THIS->default_style;
    OUTPUT:
        RETVAL

=for apidoc |||layout|



=cut

void
fltk::BarGroup::layout( )

=for apidoc ||bool|opened|



=for apidoc ||bool|opened|value



=cut

bool
fltk::BarGroup::opened( bool value = NO_INIT )
    CASE: !items
        C_ARGS:
     CASE:
        C_ARGS: value


=for apidoc ||bool|open|



=for apidoc ||bool|cloase|


=cut

bool
fltk::BarGroup::open( )
    CODE:
        switch ( ix ) {
            case 0: RETVAL = THIS->open( );  break;
            case 1: RETVAL = THIS->close( ); break;
        }
    OUTPUT:
        RETVAL
    ALIAS:
        close = 1

=for apidoc ||int|glyph_size|



=for apidoc |||glyph_size|value



=cut

int
fltk::BarGroup::glyph_size( int value = NO_INIT )
    CASE: !items
        CODE:
            RETVAL = THIS->glyph_size( );
    CASE:
        CODE:
            THIS->glyph_size( value );

BOOT:
    isa("FLTK::BarGroup", "FLTK::Group");

#endif // ifndef DISABLE_BARGROUP
