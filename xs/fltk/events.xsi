
#if 0

#include <fltk/events.h>

Widget *
belowmouse ( WIDGET = NO_INIT )
    CASE: items
        CODE:
            RETVAL = belowmouse( );
    CASE:
        Widget * WIDGET
        CODE:
            belowmouse( WIDGET );

#endif


 #  TODO
 #
 #enum  	{
 #  NO_EVENT, PUSH, RELEASE, ENTER,
 #  LEAVE, DRAG, FOCUS, UNFOCUS,
 #  KEY, KEYUP, FOCUS_CHANGE, MOVE,
 #  SHORTCUT, DEACTIVATE, ACTIVATE, HIDE,
 #  SHOW, PASTE, TIMEOUT, MOUSEWHEEL,
 #  DND_ENTER, DND_DRAG, DND_LEAVE, DND_RELEASE,
 #  TOOLTIP
 #}
 #enum  	{
 #  LeftButton, MiddleButton, RightButton, SpaceKey,
 #  BackSpaceKey, TabKey, ClearKey, ReturnKey,
 #  PauseKey, ScrollLockKey, EscapeKey, HomeKey,
 #  LeftKey, UpKey, RightKey, DownKey,
 #  PageUpKey, PageDownKey, EndKey, PrintKey,
 #  InsertKey, MenuKey, HelpKey, NumLockKey,
 #  Keypad, KeypadEnter, MultiplyKey, AddKey,
 #  SubtractKey, DecimalKey, DivideKey, Keypad0,
 #  Keypad1, Keypad2, Keypad3, Keypad4,
 #  Keypad5, Keypad6, Keypad7, Keypad8,
 #  Keypad9, KeypadLast, F0Key, F1Key,
 #  F2Key, F3Key, F4Key, F5Key,
 #  F6Key, F7Key, F8Key, F9Key,
 #  F10Key, F11Key, F12Key, LastFunctionKey,
 #  LeftShiftKey, RightShiftKey, LeftCtrlKey, RightCtrlKey,
 #  CapsLockKey, LeftMetaKey, RightMetaKey, LeftAltKey,
 #  RightAltKey, DeleteKey, LeftAccKey, RightAccKey,
 #  LeftCmdKey, RightCmdKey
 #}
 #enum  	{
 #  SHIFT, CAPSLOCK, CTRL, ALT,
 #  NUMLOCK, META, SCROLLLOCK, BUTTON1,
 #  BUTTON2, BUTTON3, ANY_BUTTON, ACCELERATOR,
 #  COMMAND, OPTION
 #}
 #enum  	{
 #  DEVICE_MOUSE, DEVICE_STYLUS, DEVICE_ERASER, DEVICE_CURSOR,
 #  DEVICE_AIRBRUSH, DEVICE_TOUCH
 #}
 #void 	add_event_handler (int(*h)(int, Window *))
 #void 	belowmouse (Widget &w)
 #void 	belowmouse (Widget *)
 #Widget * 	belowmouse ()
 #unsigned 	BUTTON (int n)
 #bool 	compose (int &del)
 #void 	compose_reset ()
 #void 	copy (const char *stuff, int len, bool clipboard=false)
 #bool 	dnd ()
 #int 	event ()
 #unsigned 	event_button ()
 #void 	event_clicks (int i)
 #int 	event_clicks ()
 #int 	event_device ()
 #int 	event_dx ()
 #int 	event_dy ()
 #bool 	event_inside (const Rectangle &)
 #void 	event_is_click (bool)
 #bool 	event_is_click ()
 #unsigned 	event_key ()
 #unsigned 	event_key_repeated ()
 #bool 	event_key_state (unsigned)
 #unsigned 	event_length ()
 #const char * 	event_name (int event)
 # 	return the corresponding str of an event, should not consume memory if api is not used
 #float 	event_pressure ()
 #bool 	event_state (unsigned i)
 #unsigned 	event_state ()
 #const char * 	event_text ()
 #int 	event_x ()
 #int 	event_x_root ()
 #float 	event_x_tilt ()
 #int 	event_y ()
 #int 	event_y_root ()
 #float 	event_y_tilt ()
 #void 	exit_modal ()
 #bool 	exit_modal_flag ()
 #void 	focus (Widget &w)
 #void 	focus (Widget *)
 #Widget * 	focus ()
 #unsigned 	foreachShortcut (ShortcutFunctor &f)
 #unsigned 	foreachShortcut (const Widget *, ShortcutFunctor &)
 #bool 	get_key_state (unsigned)
 #void 	get_mouse (int &, int &)
 #bool 	grab ()
 #bool 	handle (int, Window *)
 #unsigned 	key (const char *name)
 #const char * 	key_name (unsigned key)
 #Widget * 	modal ()
 #void 	modal (Widget *, bool grab=false)
 #void 	paste (Widget &receiver, bool clipboard=false)
 #void 	pushed (Widget &w)
 #void 	pushed (Widget *)
 #Widget * 	pushed ()
 #bool 	try_shortcut ()
 #bool 	warp_mouse (int, int)


