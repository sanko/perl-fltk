#include <fltk/Button.H>

MODULE = FLTK               PACKAGE = FLTK::Button

=for apidoc new

Creates a new C<FLTK::Button> object. Obviously.

=cut

Button *
Button::new(x, y, w, h, label = 0)
    int x
    int y
    int w
    int h
    char * label
    CODE:
        RETVAL = new Button( x, y, w, h, label);
        RETVAL->copy_label(label);
        /* warn("%s|%s", RETVAL->label(), label); */
    OUTPUT:
        RETVAL

bool
Button::DESTROY ( )
    CODE:
        //warn ( "Bye, Button (%s)!", THIS->label());
        delete THIS;

void
Button::draw( int glyph_width )

bool
Button::value( value = NO_INIT )
    CASE: items == 1
        CODE:
            RETVAL = THIS->value();
        OUTPUT:
            RETVAL
    CASE: items == 2
        bool value
        CODE:
            THIS->value(value);
            RETVAL = THIS->value();
        OUTPUT:
            RETVAL

 # Children

INCLUDE: FLTK_CheckButton.xsi

INCLUDE: FLTK_HighlightButton.xsi

INCLUDE: FLTK_RepeatButton.xsi

INCLUDE: FLTK_ReturnButton.xsi

INCLUDE: FLTK_ToggleButton.xsi

 #
 # Copyright (C) 2009 by Sanko Robinson <sanko@cpan.org>
 #
 # This program is free software; you can redistribute it and/or modify it
 # under the terms of The Artistic License 2.0.  See the LICENSE file
 # included with this distribution or
 # http://www.perlfoundation.org/artistic_license_2_0.  For
 # clarification, see http://www.perlfoundation.org/artistic_2_0_notes.
 #
 # When separated from the distribution, all POD documentation is covered by
 # the Creative Commons Attribution-Share Alike 3.0 License.  See
 # http://creativecommons.org/licenses/by-sa/3.0/us/legalcode.  For
 # clarification, see http://creativecommons.org/licenses/by-sa/3.0/us/.
 #
 # $Id$
 #
