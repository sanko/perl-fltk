MODULE = FLTK               PACKAGE = FLTK::GSave

=pod

=head1 Description

The constructor does a "gsave" and the destructor does a "grestore", and this
object provides the memory to store the current graphics state. You must
surround any calls to L<C<make_current()>|/"make_current"> with this.

To improve speed on some backends this may not preserve the font, color, path,
or line settings, since these are usually changed afterwards anyway. GSave may
also clear the clip, though it will be restored by the destructor.

  if ( ! $image->drawn( ) ) {
    my $gsave = FLTK::GSave->new();
    $image->make_current();
    draw_graphics_for_image();
    # destructor of the GSave happens here
  }
  # we can now draw our image into the window:
  $image->draw($x, $y, $w, $h);

=cut

#include <fltk/draw.H>

=for apidoc

Creates a new L<FLTK::GSave|FLTK::GSave> object. Obviously.

=cut

fltk::GSave *
fltk::GSave::new ( )

 #if ALLOW_DESTROY // This object's basic functionality _requires_ destruction

bool
fltk::GSave::DESTROY ( )
    CODE:
#if VERBOSE >= 2
        warn ( "Bye, GSave" );
#endif
        delete THIS;
        RETVAL = true;
    OUTPUT:
        RETVAL

 #endif

=pod

=head1 Author

Sanko Robinson <sanko@cpan.org> - http://sankorobinson.com/

CPAN ID: SANKO

=head1 License and Legal

Copyright (C) 2009 by Sanko Robinson E<lt>sanko@cpan.orgE<gt>

This program is free software; you can redistribute it and/or modify
it under the terms of The Artistic License 2.0.  See the F<LICENSE>
file included with this distribution or
http://www.perlfoundation.org/artistic_license_2_0.  For
clarification, see http://www.perlfoundation.org/artistic_2_0_notes.

When separated from the distribution, all POD documentation is covered
by the Creative Commons Attribution-Share Alike 3.0 License.  See
http://creativecommons.org/licenses/by-sa/3.0/us/legalcode.  For
clarification, see http://creativecommons.org/licenses/by-sa/3.0/us/.

=for git $Id$

=cut
